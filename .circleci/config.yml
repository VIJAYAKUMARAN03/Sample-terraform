version: "2.1"
orbs:
  aws-cli: circleci/aws-cli@4.0

jobs:
  terraform_init:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repoS
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk update
            apk add --no-cache aws-cli
      - run:
          name: AWS CLI Configuration
          command: |
            source "$BASH_ENV"
            aws configure set aws_access_key_id $aws_access_key
            aws configure set aws_secret_access_key $aws_secret_key
            aws configure set default.region $region
      - run:
          name: Terraform Init
          command: |
            terraform init

  terraform_plan:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repoS
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk update
            apk add --no-cache aws-cli
      - run:
          name: AWS CLI Configuration
          command: |
            source "$BASH_ENV"
            aws configure set aws_access_key_id $aws_access_key
            aws configure set aws_secret_access_key $aws_secret_key
            aws configure set default.region $region
      - run:
          name: Terraform Plan
          command: |
            terraform init
            terraform plan

  terraform_apply:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repoS
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk update
            apk add --no-cache aws-cli
      - run:
          name: AWS CLI Configuration
          command: |
            source "$BASH_ENV"
            aws configure set aws_access_key_id $aws_access_key
            aws configure set aws_secret_access_key $aws_secret_key
            aws configure set default.region $region
      - run:
          name: Terraform Apply
          command: |
            terraform init
            terraform apply -var-file="${ENV}.tfvars" --auto-approve

  terraform_output:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repoS
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk update
            apk add --no-cache aws-cli
      - run:
          name: AWS CLI Configuration
          command: |
            source "$BASH_ENV"
            aws configure set aws_access_key_id $aws_access_key
            aws configure set aws_secret_access_key $aws_secret_key
            aws configure set default.region $region
      - run:
          name: Terraform Output
          command: |
            terraform init
            terraform output

  terraform_destroy:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repoS
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apk update
            apk add --no-cache aws-cli
      - run:
          name: AWS CLI Configuration
          command: |
            source "$BASH_ENV"
            aws configure set aws_access_key_id $aws_access_key
            aws configure set aws_secret_access_key $aws_secret_key
            aws configure set default.region $region
      - run:
          name: Terraform Destroy
          command: |
            terraform init
            terraform destroy -var-file="${ENV}.tfvars" --auto-approve
            
workflows:
  version: 2 
  Init-Plan-Apply-Output:
    jobs:
      - terraform_init
      - terraform_plan:
          requires : 
            - terraform_init
      - terraform_apply :
          requires : 
            - terraform_plan
          filters:
             branches:
                only: main
      - terraform_output :
          requires : 
            - terraform_apply
      - terraform_destroy_hold:
          type: approval
          requires : 
            - terraform_output
      - terraform_destroy :
          requires : 
            - terraform_destroy_hold
