version: "2.1"
orbs:
  aws-cli: circleci/aws-cli@4.0
  aws-s3: circleci/aws-s3@4.0
  python: circleci/python@1.5.0

jobs:
  Branch:
    docker:
      - image: python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Python
          command: |
            pipeline_ids=$(echo $pip | jq -r '.items[] | {"id": .id, "revision": .vcs.revision}' )
            echo $pipeline_ids
            
      - run:
          name: Branch Name
          command: |
            result=$(echo $workflow | jq -r '.items[] | select(.status == "success")')
            echo $result

      - run:
          name: Branch Name
          command: |
            echo $workflow
            echo $pip

workflows:
  Branch-Name:
    jobs:
      - Branch


















# version: 2.1

# jobs:
#   # terraform_init:
#   #   docker:
#   #     - image: hashicorp/terraform:latest
#   #   working_directory: ~/repo
#   #   steps:
#   #     - checkout
#   #     - run:
#   #         name: Terraform Init
#   #         command: 
#   #             terraform init

#   # terraform_plan:
#   #     docker:
#   #       - image: hashicorp/terraform:latest
#   #     working_directory: ~/repo
#   #     steps:
#   #       - checkout
#   #       - run:
#   #           name: Terraform Plan
#   #           command: |
#   #             terraform init
#   #             terraform plan

#   check:
#     docker:
#       - image: hashicorp/terraform:latest
#     working_directory: ~/repo
#     steps:
#       - checkout
#       - run:
#           name: Check
#           command: |
#             pwd
#             ls -l
#             apk update
#             apk add zip
#             mkdir zip-files
#             zip -r ./zip-files/files.zip ./zip-files

#       - run:
#           name: Check
#           command: |
#             pwd
#             ls -l
#             cd zip-files
#             ls -l
#   # terraform_apply_output:
#   #   docker:
#   #     - image: hashicorp/terraform:latest
#   #   working_directory: ~/repo
#   #   steps:
#   #     - checkout
#   #     - run:
#   #         name: Terraform Apply & Output
#   #         command: |
#   #           terraform init
#   #           terraform apply --auto-approve

# # -var-file="${ENV}.tfvars" --auto-approve
# workflows:
#   version: 2 
#   Init-Apply-Output:
#     jobs:
#       - check
#       # - terraform_init
#       # - terraform_plan:
#       #     requires : 
#       #       - terraform_init
#       # - terraform_apply_output :
#       #     requires : 
#       #       - terraform_plan
#       #     filters:
#       #        branches:
#       #           only: main
